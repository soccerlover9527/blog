<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>事务 - Tag - 融融冶冶黄</title><link>soccerlover9527.love/blog/tags/%E4%BA%8B%E5%8A%A1/</link><description>事务 - Tag - 融融冶冶黄</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>soccerlover9527@gmail.com (融融冶冶黄)</managingEditor><webMaster>soccerlover9527@gmail.com (融融冶冶黄)</webMaster><lastBuildDate>Sun, 23 Apr 2023 20:55:10 +0800</lastBuildDate><atom:link href="soccerlover9527.love/blog/tags/%E4%BA%8B%E5%8A%A1/" rel="self" type="application/rss+xml"/><item><title>Mvcc</title><link>soccerlover9527.love/blog/posts/databases/mysql/mvcc/</link><pubDate>Sun, 23 Apr 2023 20:55:10 +0800</pubDate><author>soccerlover</author><guid>soccerlover9527.love/blog/posts/databases/mysql/mvcc/</guid><description>MVCC 简介 MVCC，即Multi-Version Concurrency Control （多版本并发控制）。它是一种并发控制的方法，一般在数据库管理系统中，实现对数据库的并发访问。 InnoDB 是一个支持MVCC存储引擎。它保留有关已更改行的旧版本的信息，以支持并发和回滚等事务功能。旧版本信息存储在被称为回滚段（roll segment）的数据结构中的系统表空间或者 undo 表空间中。 InnoDB 使用回滚段中的信息来执行事务回滚中所需的撤消操作。它还使用这些信息来构建行的早期版本以进行一致的读取。
相关基本概念点 事务版本号 在每次事务开始都会获取一个自增的事务ID，通过这个ID我们可以判断事务执行的先后顺序。
隐式字段 在内部，InnoDB 存储在数据库中的每一行都有三个隐式字段：
DB_TRX_ID 标识插入或者更新该行的最新的事务的id。（删除在事务中也会被视为更新） DB_ROLL_PTR 该指针指向上文提到的回滚段中的 undo log，也就是上一个版本的该行记录。 DB_ROW_ID 隐含的自增主键，如果主键不是自增这行没有使用 上图是在只有一个事务（10001）进行操作时一行记录的状态。
版本链 当多个事务并行的更新某一行的数据时，不同事物对改行数据的修改会产生多个版本，然后通过回滚指针（DB_ROLL_PTR）连成一个链表，这个就是版本链，如下图所示。
可以看见，事务链是通过（DB_ROLL_PTR）进行关联，且存放在 undo log 中。
Undo log 回滚日志，用于事务回滚时恢复上一个版本的数据，记录的是当前事务的反向操作，例如，该事物插入了一条数据，那么 undo log 记录的是一个 DELETE 操作，如果是一个 UPDATE 操作，那么 undo log 记录的是 UPDATE 到原始数据的操作。
所以 undo log 可以分为两类 undo log：
insert undo log 记录 INSERT 语句的 undo log
update undo log 记录 UPDATE DELETE 语句的 undo log</description></item></channel></rss>